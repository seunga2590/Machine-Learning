{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"혼공머신 RNN","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPL9axpHP33Y7Z4h/8lwqap"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"4vVDFAtYrbB9","executionInfo":{"status":"ok","timestamp":1614211434393,"user_tz":-540,"elapsed":2862,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}}},"source":["#IMDB 리뷰 데이터셋 이용\r\n","\r\n","import tensorflow as tf\r\n","NUM_WORDS = 500"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FN8knyQzsW1M","executionInfo":{"status":"ok","timestamp":1614211439186,"user_tz":-540,"elapsed":7644,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"be94236b-8686-46b6-c852-b0814c277602"},"source":["imdb = tf.keras.datasets.imdb\r\n","\r\n","(train_input, train_target), (test_input, test_target) = imdb.load_data(num_words=NUM_WORDS)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/imdb.npz\n","17465344/17464789 [==============================] - 0s 0us/step\n"],"name":"stdout"},{"output_type":"stream","text":["<string>:6: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/datasets/imdb.py:159: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/datasets/imdb.py:160: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iUhBQvXFsuZb","executionInfo":{"status":"ok","timestamp":1614211439187,"user_tz":-540,"elapsed":7639,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"6ace4258-be9b-4789-e4d9-ff5c4ce37b9c"},"source":["#샘플 개수\r\n","print(train_input.shape, test_input.shape)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["(25000,) (25000,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ESRqG4vXs8ls","executionInfo":{"status":"ok","timestamp":1614211439187,"user_tz":-540,"elapsed":7633,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"eed24a11-392a-434e-f776-dac7e5bbb726"},"source":["print(len(train_input[0]))"],"execution_count":4,"outputs":[{"output_type":"stream","text":["218\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LodLgbeWtKyj","executionInfo":{"status":"ok","timestamp":1614211439187,"user_tz":-540,"elapsed":7627,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"8c69b954-3d9f-41a8-f750-7ab7fee2e5c3"},"source":["print(train_input[0])\r\n","# num_words = 500으로 지정 : 500개의 단어만 이용 / 없는 단어는 2로 나타남"],"execution_count":5,"outputs":[{"output_type":"stream","text":["[1, 14, 22, 16, 43, 2, 2, 2, 2, 65, 458, 2, 66, 2, 4, 173, 36, 256, 5, 25, 100, 43, 2, 112, 50, 2, 2, 9, 35, 480, 284, 5, 150, 4, 172, 112, 167, 2, 336, 385, 39, 4, 172, 2, 2, 17, 2, 38, 13, 447, 4, 192, 50, 16, 6, 147, 2, 19, 14, 22, 4, 2, 2, 469, 4, 22, 71, 87, 12, 16, 43, 2, 38, 76, 15, 13, 2, 4, 22, 17, 2, 17, 12, 16, 2, 18, 2, 5, 62, 386, 12, 8, 316, 8, 106, 5, 4, 2, 2, 16, 480, 66, 2, 33, 4, 130, 12, 16, 38, 2, 5, 25, 124, 51, 36, 135, 48, 25, 2, 33, 6, 22, 12, 215, 28, 77, 52, 5, 14, 407, 16, 82, 2, 8, 4, 107, 117, 2, 15, 256, 4, 2, 7, 2, 5, 2, 36, 71, 43, 2, 476, 26, 400, 317, 46, 7, 4, 2, 2, 13, 104, 88, 4, 381, 15, 297, 98, 32, 2, 56, 26, 141, 6, 194, 2, 18, 4, 226, 22, 21, 134, 476, 26, 480, 5, 144, 30, 2, 18, 51, 36, 28, 224, 92, 25, 104, 4, 226, 65, 16, 38, 2, 88, 12, 16, 283, 5, 16, 2, 113, 103, 32, 15, 16, 2, 19, 178, 32]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8pea2US0tYQ7","executionInfo":{"status":"ok","timestamp":1614211439188,"user_tz":-540,"elapsed":7623,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"706fdfaa-8863-4c0d-9ccb-90b25ff51ff7"},"source":["# Q = 리뷰가 긍정인지 부정인지\r\n","\r\n","print(train_target[0])\r\n","#1 = 긍정 0 = 부정"],"execution_count":6,"outputs":[{"output_type":"stream","text":["1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ZwM2WWIFts26","executionInfo":{"status":"ok","timestamp":1614211439886,"user_tz":-540,"elapsed":8319,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}}},"source":["from sklearn.model_selection import train_test_split\r\n","train_input, val_input, train_target, val_target = train_test_split(train_input, \r\n","                                                                    train_target,\r\n","                                                                    test_size=0.2,\r\n","                                                                    random_state=42)"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"-EMMpNZMt-WK","executionInfo":{"status":"ok","timestamp":1614211439888,"user_tz":-540,"elapsed":8319,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}}},"source":["import numpy as np\r\n","lengths = np.array([len(x) for x in train_input])"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cn5oHwkpw_pf","executionInfo":{"status":"ok","timestamp":1614211439888,"user_tz":-540,"elapsed":8313,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"a5ec2957-f4a0-4eaf-b5ea-916bcba54890"},"source":["lengths[10:20]"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([195,  55, 122, 142, 104, 109, 179, 777, 368, 311])"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u-sb0EY2uNry","executionInfo":{"status":"ok","timestamp":1614211439889,"user_tz":-540,"elapsed":8309,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"c80236ed-eff3-4c92-96d9-42a5980f9408"},"source":["print(np.mean(lengths), np.median(lengths))\r\n","\r\n","# 리뷰길이의 평균값 & 중간값"],"execution_count":10,"outputs":[{"output_type":"stream","text":["239.00925 178.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"WLaSBSsIuVSS","executionInfo":{"status":"ok","timestamp":1614211439889,"user_tz":-540,"elapsed":8302,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"8bd16159-0189-4718-a30c-05d3a156eb58"},"source":["import matplotlib.pyplot as plt\r\n","plt.hist(lengths)\r\n","plt.xlabel('length')\r\n","plt.ylabel('frequency')\r\n","plt.show()"],"execution_count":11,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"RJA5EZP1u21R","executionInfo":{"status":"ok","timestamp":1614211440194,"user_tz":-540,"elapsed":8605,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}}},"source":["# 단어 길이 통일하기(100으로)\r\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\r\n","train_seq = pad_sequences(train_input, maxlen=100)\r\n","\r\n","#100이 넘어가면 자르고, 100이 안되면 0으로 padding"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LkXbyYSlwQyY","executionInfo":{"status":"ok","timestamp":1614211440195,"user_tz":-540,"elapsed":8600,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"e6045bfc-5f35-4d53-d71a-ecafffe699ab"},"source":["print(train_seq.shape)"],"execution_count":13,"outputs":[{"output_type":"stream","text":["(20000, 100)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KTB-CITGwcwg","executionInfo":{"status":"ok","timestamp":1614211440196,"user_tz":-540,"elapsed":8595,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"0c46fa21-4ed5-4851-8e96-ee30536120b6"},"source":["print(train_seq[0])\r\n","# 0이 없는 것 = 100보다 길이가 길었다"],"execution_count":14,"outputs":[{"output_type":"stream","text":["[ 10   4  20   9   2 364 352   5  45   6   2   2  33 269   8   2 142   2\n","   5   2  17  73  17 204   5   2  19  55   2   2  92  66 104  14  20  93\n","  76   2 151  33   4  58  12 188   2 151  12 215  69 224 142  73 237   6\n","   2   7   2   2 188   2 103  14  31  10  10 451   7   2   5   2  80  91\n","   2  30   2  34  14  20 151  50  26 131  49   2  84  46  50  37  80  79\n","   6   2  46   7  14  20  10  10 470 158]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iX9GjOw_whmI","executionInfo":{"status":"ok","timestamp":1614211440197,"user_tz":-540,"elapsed":8590,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"86e0cb40-a5c4-4248-eb55-5ea5b48c1db2"},"source":["print(train_seq[12])\r\n","# 앞부분이 0으로 채워지고 뒤로 정렬"],"execution_count":15,"outputs":[{"output_type":"stream","text":["[ 21  24   2  17  52  10  10  12   2  32  61   2   8  97  12 143  14  31\n","  45   6  52 292  13 161  28   8   2   4   2 334  13   2  13  62  28 216\n"," 145  14  31 166   2 313   7 189 168  40   6 194 268 363   2  10  10   4\n","  64   2   8  14  20  16   4 115 277   2   7 307 372  24   6  78  31   2\n","  98  10  10  48  25 181   8   2  19 129 369 103   6 314  23   4   2  95\n","  14   2  18  25 334   2  12  40   4   2]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ysH2b6Waw4dQ","executionInfo":{"status":"ok","timestamp":1614211440197,"user_tz":-540,"elapsed":8588,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}}},"source":["val_seq = pad_sequences(val_input, maxlen=100)"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"j-gYRZgexZz5","executionInfo":{"status":"ok","timestamp":1614211445773,"user_tz":-540,"elapsed":14162,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}}},"source":["from tensorflow import keras\r\n","\r\n","model = keras.Sequential()\r\n","model.add(keras.layers.SimpleRNN(8, input_shape=(100, 500)))\r\n","#(100, 500)인 이유 → one hot encoding(정수값의 크기에 따라 활성화출력이 바뀔 수 있기 때문) = 위치만 1 나머지 자리는 0으로 만드는 방법\r\n","model.add(keras.layers.Dense(1, activation='sigmoid'))\r\n","#activation function = 'tanh'"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"pgyT9uzby-d3","executionInfo":{"status":"ok","timestamp":1614211448350,"user_tz":-540,"elapsed":16738,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}}},"source":["#keras.utils.to_categorical = one-hot encoding으로 자동으로 변환\r\n","train_oh = keras.utils.to_categorical(train_seq)"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ff5O4JVxzB1e","executionInfo":{"status":"ok","timestamp":1614211448351,"user_tz":-540,"elapsed":16734,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"bddb204c-ae75-43e0-83c1-edeadbdf2e0a"},"source":["print(train_oh.shape)"],"execution_count":19,"outputs":[{"output_type":"stream","text":["(20000, 100, 500)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XO0-1Vm4zhA6","executionInfo":{"status":"ok","timestamp":1614211448351,"user_tz":-540,"elapsed":16727,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"bf305501-fc82-4ea1-940c-0dadf7bba4cb"},"source":["print(train_oh[0][0])"],"execution_count":20,"outputs":[{"output_type":"stream","text":["[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9T6BecOezQ8-","executionInfo":{"status":"ok","timestamp":1614211448352,"user_tz":-540,"elapsed":16726,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}}},"source":["val_oh = keras.utils.to_categorical(val_seq)"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r_9ZSpipzYYF","executionInfo":{"status":"ok","timestamp":1614211448352,"user_tz":-540,"elapsed":16722,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"3ba383b4-ca01-43f6-f6c3-1eed29404e8c"},"source":["model.summary()"],"execution_count":22,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","simple_rnn (SimpleRNN)       (None, 8)                 4072      \n","_________________________________________________________________\n","dense (Dense)                (None, 1)                 9         \n","=================================================================\n","Total params: 4,081\n","Trainable params: 4,081\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O7Xcfe1O0FUP","executionInfo":{"status":"ok","timestamp":1614222100242,"user_tz":-540,"elapsed":111727,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"e393c1e9-dce1-449c-e419-f176e9e1082f"},"source":["rmsprop = keras.optimizers.RMSprop(learning_rate=1e-4)\r\n","model.compile(optimizer=rmsprop, loss='binary_crossentropy', metrics = ['accuracy']) # 결과가 부정 or 긍정\r\n","checkpoint_cb = keras.callbacks.ModelCheckpoint('best-simplernn-model.h5')\r\n","#callbacks = 훈련 과정 중 어떤 작업을 중간에서 수행할 수 있게 하는 객체 후 저장\r\n","early_stopping_cb = keras.callbacks.EarlyStopping(patience=3,\r\n","                                                  restore_best_weights = True)\r\n","#early_stopping = 검증점수가 상승하기 시작되면 과대적합이 커지게 된다 : 이때 훈련을 조기 종료 시키는 방법\r\n","history = model.fit(train_oh, train_target, epochs=22, batch_size=64,\r\n","                    validation_data = (val_oh, val_target),\r\n","                    callbacks = [checkpoint_cb, early_stopping_cb])"],"execution_count":39,"outputs":[{"output_type":"stream","text":["Epoch 1/22\n","313/313 [==============================] - 24s 73ms/step - loss: 0.6521 - accuracy: 0.6187 - val_loss: 0.6912 - val_accuracy: 0.5498\n","Epoch 2/22\n","313/313 [==============================] - 22s 70ms/step - loss: 0.6478 - accuracy: 0.6249 - val_loss: 0.6908 - val_accuracy: 0.5482\n","Epoch 3/22\n","313/313 [==============================] - 22s 70ms/step - loss: 0.6489 - accuracy: 0.6245 - val_loss: 0.6914 - val_accuracy: 0.5484\n","Epoch 4/22\n","313/313 [==============================] - 22s 70ms/step - loss: 0.6474 - accuracy: 0.6253 - val_loss: 0.6916 - val_accuracy: 0.5490\n","Epoch 5/22\n","313/313 [==============================] - 22s 71ms/step - loss: 0.6444 - accuracy: 0.6302 - val_loss: 0.6922 - val_accuracy: 0.5500\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"zPc5oT-02Xiu","executionInfo":{"status":"ok","timestamp":1614222172936,"user_tz":-540,"elapsed":1153,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"d257232e-9e4a-4f5b-e95a-d67881e7b33b"},"source":["plt.plot(history.history['loss'])\r\n","#history = 손실과 정확도를 순서대로 나열하는 단순 리스트 → 그래프 그리기 전 이용\r\n","plt.plot(history.history['val_loss'])\r\n","plt.xlabel('epoch')\r\n","plt.ylabel('loss')\r\n","plt.legend(['train', 'val'])\r\n","plt.show()"],"execution_count":40,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7xNg5S3x5V9K","executionInfo":{"status":"ok","timestamp":1614211654036,"user_tz":-540,"elapsed":222393,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"a29839fa-9cc0-44b5-ecc2-068db8dbb374"},"source":["# one-hot encoding → 단점 : 입력 데이터가 커진다.\r\n","print(train_seq.nbytes, train_oh.nbytes)"],"execution_count":25,"outputs":[{"output_type":"stream","text":["8000000 4000000000\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"C9qKit2y7dTp","executionInfo":{"status":"ok","timestamp":1614211654283,"user_tz":-540,"elapsed":222638,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}}},"source":["#Embedding = one-hot encoding 대신 사용\r\n","#고정된 크기의 실수로 변환\r\n","\r\n","model2 = keras.Sequential()\r\n","model2.add(keras.layers.Embedding(500, 16, input_length=100))\r\n","model2.add(keras.layers.SimpleRNN(8))\r\n","model2.add(keras.layers.Dense(1, activation='sigmoid'))"],"execution_count":26,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cu0wRwBY8Ebi","executionInfo":{"status":"ok","timestamp":1614211654284,"user_tz":-540,"elapsed":222635,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"96d8d6f1-1186-47fc-8b66-0a6466799b0f"},"source":["model2.summary()"],"execution_count":27,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        (None, 100, 16)           8000      \n","_________________________________________________________________\n","simple_rnn_1 (SimpleRNN)     (None, 8)                 200       \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 1)                 9         \n","=================================================================\n","Total params: 8,209\n","Trainable params: 8,209\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bkOTd24tC-cE","executionInfo":{"status":"ok","timestamp":1614220369335,"user_tz":-540,"elapsed":398416,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"491d91e6-39cd-4c3e-e337-b25c2341f89c"},"source":["rmsprop = keras.optimizers.RMSprop(learning_rate=1e-4)\r\n","model2.compile(optimizer=rmsprop, loss='binary_crossentropy', metrics=['accuracy'])\r\n","checkpoint_cb = keras.callbacks.ModelCheckpoint('best-embedding-model.h5')\r\n","early_stopping_cb = keras.callbacks.EarlyStopping(patience=3, restore_best_weights=True)\r\n","history = model2.fit(train_seq, train_target, epochs=22, batch_size=64,\r\n","                     validation_data=(val_seq, val_target),\r\n","                     callbacks=[checkpoint_cb, early_stopping_cb])"],"execution_count":35,"outputs":[{"output_type":"stream","text":["Epoch 1/22\n","313/313 [==============================] - 22s 68ms/step - loss: 0.5076 - accuracy: 0.7856 - val_loss: 0.5196 - val_accuracy: 0.7610\n","Epoch 2/22\n","313/313 [==============================] - 21s 68ms/step - loss: 0.4934 - accuracy: 0.7947 - val_loss: 0.5057 - val_accuracy: 0.7728\n","Epoch 3/22\n","313/313 [==============================] - 21s 67ms/step - loss: 0.4845 - accuracy: 0.7968 - val_loss: 0.5044 - val_accuracy: 0.7642\n","Epoch 4/22\n","313/313 [==============================] - 21s 68ms/step - loss: 0.4747 - accuracy: 0.8007 - val_loss: 0.4947 - val_accuracy: 0.7762\n","Epoch 5/22\n","313/313 [==============================] - 21s 68ms/step - loss: 0.4676 - accuracy: 0.8054 - val_loss: 0.4872 - val_accuracy: 0.7788\n","Epoch 6/22\n","313/313 [==============================] - 21s 68ms/step - loss: 0.4599 - accuracy: 0.8063 - val_loss: 0.4837 - val_accuracy: 0.7770\n","Epoch 7/22\n","313/313 [==============================] - 21s 68ms/step - loss: 0.4561 - accuracy: 0.8055 - val_loss: 0.4794 - val_accuracy: 0.7772\n","Epoch 8/22\n","313/313 [==============================] - 21s 67ms/step - loss: 0.4432 - accuracy: 0.8138 - val_loss: 0.4738 - val_accuracy: 0.7814\n","Epoch 9/22\n","313/313 [==============================] - 21s 69ms/step - loss: 0.4457 - accuracy: 0.8082 - val_loss: 0.4783 - val_accuracy: 0.7744\n","Epoch 10/22\n","313/313 [==============================] - 21s 66ms/step - loss: 0.4388 - accuracy: 0.8112 - val_loss: 0.4708 - val_accuracy: 0.7800\n","Epoch 11/22\n","313/313 [==============================] - 21s 67ms/step - loss: 0.4211 - accuracy: 0.8213 - val_loss: 0.4665 - val_accuracy: 0.7802\n","Epoch 12/22\n","313/313 [==============================] - 20s 65ms/step - loss: 0.4236 - accuracy: 0.8187 - val_loss: 0.4649 - val_accuracy: 0.7824\n","Epoch 13/22\n","313/313 [==============================] - 20s 65ms/step - loss: 0.4233 - accuracy: 0.8173 - val_loss: 0.4638 - val_accuracy: 0.7830\n","Epoch 14/22\n","313/313 [==============================] - 20s 65ms/step - loss: 0.4191 - accuracy: 0.8191 - val_loss: 0.4685 - val_accuracy: 0.7786\n","Epoch 15/22\n","313/313 [==============================] - 20s 64ms/step - loss: 0.4166 - accuracy: 0.8169 - val_loss: 0.4648 - val_accuracy: 0.7796\n","Epoch 16/22\n","313/313 [==============================] - 20s 65ms/step - loss: 0.4082 - accuracy: 0.8242 - val_loss: 0.4584 - val_accuracy: 0.7844\n","Epoch 17/22\n","313/313 [==============================] - 21s 66ms/step - loss: 0.4075 - accuracy: 0.8219 - val_loss: 0.4590 - val_accuracy: 0.7874\n","Epoch 18/22\n","313/313 [==============================] - 21s 66ms/step - loss: 0.3982 - accuracy: 0.8295 - val_loss: 0.4595 - val_accuracy: 0.7824\n","Epoch 19/22\n","313/313 [==============================] - 21s 66ms/step - loss: 0.4007 - accuracy: 0.8255 - val_loss: 0.4604 - val_accuracy: 0.7834\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"VJ9XKJdGDo9z","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1614221560047,"user_tz":-540,"elapsed":1477,"user":{"displayName":"Aileen seunga An","photoUrl":"","userId":"11451354720632547933"}},"outputId":"0c94c239-546f-4017-b888-94e27a00d2e2"},"source":["plt.plot(history.history['loss'])\r\n","plt.plot(history.history['val_loss'])\r\n","plt.xlabel('epoch')\r\n","plt.ylabel('loss')\r\n","plt.legend(['train','val'])\r\n","plt.show()"],"execution_count":36,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"kWzVODGXiIdR"},"source":[""],"execution_count":null,"outputs":[]}]}